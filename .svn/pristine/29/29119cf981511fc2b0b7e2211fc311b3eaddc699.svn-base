package com.zts.robot.util;import java.io.FileOutputStream;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.poi.xssf.usermodel.XSSFCell;import org.apache.poi.xssf.usermodel.XSSFRichTextString;import org.apache.poi.xssf.usermodel.XSSFRow;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;public class OperaterExcel {		/**	 * 格式化数据（导出该赛事的所有人）	 * 	 * @param excelList	 * @return	 */	public static List<Map<String, Object>> formatData(			List<Map<String, Object>> list) {		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		for (Map<String, Object> map : list) {			excelMap = new HashMap<String, Object>();			excelMap.put("赛事名称", map.get("mname"));				excelMap.put("所报赛项", map.get("rnames"));			excelMap.put("报名人姓名", map.get("uname"));			excelMap.put("报名人联系电话", map.get("uphone"));						excelMap.put("发票名称", map.get("invoicename"));			excelMap.put("纳税人识别号", map.get("taxpayernumber"));			excelMap.put("开户行及账号", map.get("banknumber"));			excelMap.put("地址及电话", map.get("addressphone"));			excelMap.put("收发票地址", map.get("receiveaddress"));			excelMap.put("成员姓名", map.get("tmname"));			if("01".equals(map.get("roleflg"))){				excelMap.put("类型", "教师");			}else if("02".equals(map.get("roleflg"))){				excelMap.put("类型", "学生");			}else{				excelMap.put("类型", "");			}						excelMap.put("成员编码", map.get("tmcode"));			if("01".equals(map.get("sex"))){				excelMap.put("性别", "男");			}else if("02".equals(map.get("sex"))){				excelMap.put("性别", "女");			}else{				excelMap.put("性别", "");			}						if("00".equals(map.get("didtype"))){				excelMap.put("证件类型", "身份证");			}else if("01".equals(map.get("didtype"))){				excelMap.put("证件类型", "护照");			}else if("02".equals(map.get("didtype"))){				excelMap.put("证件类型","港澳通行证" );			}else{				excelMap.put("证件类型", "");			}			excelMap.put("证件号码", map.get("did"));			excelMap.put("email", map.get("email"));			excelMap.put("手机", map.get("phone"));			excelMap.put("学校", map.get("school"));			excelMap.put("所在院系", map.get("departname"));					excelMap.put("民族", map.get("folk"));			if("01".equals("01".equals(map.get("diningtype")))){				excelMap.put("用餐类型","正常" );			}else if("02".equals(map.get("diningtype"))){				excelMap.put("用餐类型", "回民");			}else if("03".equals(map.get("diningtype"))){				excelMap.put("用餐类型", "素食");			}else{				excelMap.put("用餐类型", "");			}									excelList.add(excelMap);		}		return excelList;	}		/**	 * 导出2007.xlsx(单sheet)	 * 	 * @param excelList	 * @param url	 * @param names	 * @param sheetName	 * @return	 */	public static boolean outputExcelxlsx(List<Map<String, Object>> excelList,			String path, String[] names, String sheetName) {		try {			// List<Map<String, Object>> excelList = new			// ArrayList<Map<String,Object>>();			// excelList = formatData(list);			int CountColumnNum = excelList.size();// 获取总行数			// 创建Excel文档			XSSFWorkbook hwb = new XSSFWorkbook();			Map<String, Object> map;			// sheet 对应一个工作页			XSSFSheet sheet = hwb.createSheet(sheetName);			XSSFRow firstrow = sheet.createRow(0); // 下标为0的行开始			XSSFCell[] firstcell = new XSSFCell[names.length];			// 创建第一行			for (int j = 0; j < names.length; j++) {				firstcell[j] = firstrow.createCell(j);				firstcell[j].setCellValue(new XSSFRichTextString(names[j]));			}			for (int i = 0; i < CountColumnNum; i++) {				// 创建一行				XSSFRow row = sheet.createRow(i + 1);				// 得到要插入的每一条记录				map = excelList.get(i);				for (int colu = 0; colu < names.length; colu++) {					// 添加数据					for (int j = 0; j < names.length; j++) {						// 添加一行数据						XSSFCell cell = row.createCell(j);						// 如果该列的值为null 或者空串 打印空						if (map.get(names[j]) == null								|| map.get(names[j]) == "") {							cell.setCellValue(" ");						} else {							cell.setCellValue(map.get(names[j]).toString());						}					}				}			}			// 创建文件输出流，准备输出电子表格			FileOutputStream out = new FileOutputStream(path);			hwb.write(out);			out.close();			return true;		} catch (Exception e) {			e.printStackTrace();			System.out.println("出错");			return false;		}	}	public static List<Map<String, Object>> formatTeamData(List<Map<String, Object>> teamDerivedList) {		// TODO 自动生成的方法存根		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		for (Map<String, Object> map : teamDerivedList) {			excelMap = new HashMap<String, Object>();			excelMap.put("参赛队编号", map.get("tcode"));				excelMap.put("参赛队名", map.get("tname"));				excelMap.put("参赛队学校", map.get("school"));				excelMap.put("机构类型", map.get("orgtype"));				excelMap.put("地区", map.get("region"));						excelMap.put("报名者", map.get("uname"));				excelMap.put("报名者电话", map.get("phone"));				excelMap.put("报名者邮箱", map.get("email"));				excelMap.put("开票抬头", map.get("invoicename"));				excelMap.put("纳税人识别号", map.get("taxpayernumber"));				excelMap.put("开户行及账号", map.get("banknumber"));				excelMap.put("地址及电话", map.get("addressphone"));				excelMap.put("收发票地址", map.get("receiveaddress"));							excelMap.put("指导教师人数", map.get("tchnum"));			excelMap.put("参赛队员人数", map.get("stunum"));				excelMap.put("指导老师姓名", map.get("tchname"));			String tchsex = map.get("tchsex").toString().replace("01", "男").replace("02", "女");			excelMap.put("指导老师性别", tchsex);			String tchdidtype = map.get("tchdidtype").toString().replace("00", "身份证").replace("01", "护照").replace("02", "港澳台通行证");			excelMap.put("指导老师证件类型", tchdidtype);				excelMap.put("指导老师证件号", map.get("tchdid"));				excelMap.put("指导老师邮箱", map.get("tchemail"));				excelMap.put("指导老师手机", map.get("tchphone"));				excelMap.put("指导教师民族", map.get("tchfolk"));			String tchdiningtype = map.get("tchdiningtype").toString().replace("01", "普通").replace("02", "清真").replace("03", "素食");			excelMap.put("指导教师餐食", tchdiningtype);						excelMap.put("队员姓名", map.get("stuname"));			String stusex = map.get("stusex").toString().replace("01", "男").replace("02", "女");			excelMap.put("队员性别", stusex);				String studidtype = map.get("studidtype").toString().replace("00", "身份证").replace("01", "护照").replace("02", "港澳台通行证");			excelMap.put("队员证件类型", studidtype);				excelMap.put("队员证件号", map.get("studid"));				excelMap.put("队员邮箱", map.get("stuemail"));				excelMap.put("队员手机", map.get("stuphone"));				excelMap.put("队员民族", map.get("stufolk"));			String studiningtype = map.get("studiningtype").toString().replace("01", "普通").replace("02", "清真").replace("03", "素食");			excelMap.put("队员餐食", studiningtype);						excelMap.put("参赛大项", map.get("frname"));				excelMap.put("参赛小项编号", map.get("rcode"));				excelMap.put("参赛小项", map.get("rname"));			String infostatus = map.get("infostatus").toString().replace("00", "已通过").replace("01", "待审核").replace("02", "已拒绝");			excelMap.put("参赛队审核状态", infostatus);			String feestatus = map.get("feestatus").toString().replace("00", "已缴费").replace("01", "未缴费").replace("02", "部分缴费");			excelMap.put("参赛队缴费状态", feestatus);									excelList.add(excelMap);		}		return excelList;	}	public static List<Map<String, Object>> formatMemberData(List<Map<String, Object>> memberDerivedList) {		// TODO 自动生成的方法存根		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		for (Map<String, Object> map : memberDerivedList) {			excelMap = new HashMap<String, Object>();			excelMap.put("姓名", map.get("tmname"));			String roleflg = map.get("roleflg").toString().replace("01", "指导教师").replace("02", "队员");			excelMap.put("人员类别", roleflg);			String sex = map.get("sex").toString().replace("01", "男").replace("02", "女");			excelMap.put("性别", sex);			String didtype = map.get("didtype").toString().replace("00", "身份证").replace("01", "护照").replace("02", "港澳台通行证");			excelMap.put("证件类型", didtype);			excelMap.put("证件号", map.get("did"));			excelMap.put("邮箱", map.get("email"));			excelMap.put("手机", map.get("phone"));			excelMap.put("民族", map.get("folk"));			String diningtype = map.get("diningtype").toString().replace("01", "普通").replace("02", "清真").replace("03", "素食");			excelMap.put("餐食", diningtype);						excelMap.put("参赛队编号", map.get("tcode"));			excelMap.put("参赛队名", map.get("tname"));			excelMap.put("参赛队学校", map.get("school"));			excelMap.put("机构类型", map.get("orgtype"));			excelMap.put("地区", map.get("region"));			excelMap.put("指导教师", map.get("tchname"));						excelMap.put("报名者", map.get("uname"));			excelMap.put("报名者电话", map.get("uphone"));			excelMap.put("报名者邮箱", map.get("uemail"));			excelMap.put("开票抬头", map.get("invoicename"));			excelMap.put("纳税人识别号", map.get("taxpayernumber"));			excelMap.put("开户行及账号", map.get("banknumber"));			excelMap.put("地址及电话", map.get("addressphone"));			excelMap.put("收发票地址", map.get("receiveaddress"));						excelMap.put("参赛大项", map.get("frname"));			excelMap.put("参赛小项编号", map.get("rcode"));			excelMap.put("参赛小项", map.get("rname"));						String infostatus = map.get("infostatus").toString().replace("00", "已通过").replace("01", "待审核").replace("02", "已拒绝");			excelMap.put("参赛队审核状态",infostatus);			String feestatus = map.get("feestatus").toString().replace("00", "已缴费").replace("01", "未缴费").replace("02", "部分缴费");			excelMap.put("参赛队缴费状态", feestatus);												excelList.add(excelMap);		}		return excelList;	}	public static List<Map<String, Object>> formatTeamRaceData(List<Map<String, Object>> teamRaceDerivedList) {		// TODO 自动生成的方法存根		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		for (Map<String, Object> map : teamRaceDerivedList) {			excelMap = new HashMap<String, Object>();						excelMap.put("参赛大项", map.get("frname"));			excelMap.put("参赛小项编号", map.get("rcode"));			excelMap.put("参赛小项", map.get("rname"));						excelMap.put("参赛队编号", map.get("tcode"));			excelMap.put("参赛队名", map.get("tname"));			excelMap.put("参赛队学校", map.get("school"));			excelMap.put("机构类型", map.get("orgtype"));			excelMap.put("地区", map.get("region"));						excelMap.put("报名者", map.get("uname"));			excelMap.put("报名者电话", map.get("phone"));			excelMap.put("报名者邮箱", map.get("email"));			excelMap.put("开票抬头", map.get("invoicename"));			excelMap.put("纳税人识别号", map.get("taxpayernumber"));			excelMap.put("开户行及账号", map.get("banknumber"));			excelMap.put("地址及电话", map.get("addressphone"));			excelMap.put("收发票地址", map.get("receiveaddress"));						excelMap.put("指导老师姓名", map.get("tchname"));			String tchsex = map.get("tchsex").toString().replace("01", "男").replace("02", "女");			excelMap.put("指导老师性别", tchsex);			String tchdidtype = map.get("tchdidtype").toString().replace("00", "身份证").replace("01", "护照").replace("02", "港澳台通行证");			excelMap.put("指导老师证件类型", tchdidtype);				excelMap.put("指导老师证件号", map.get("tchdid"));				excelMap.put("指导老师邮箱", map.get("tchemail"));				excelMap.put("指导老师手机", map.get("tchphone"));				String diningtype = map.get("diningtype").toString().replace("01", "普通").replace("02", "清真").replace("03", "素食");			excelMap.put("指导老师餐食", diningtype);										excelMap.put("报名时间", map.get("createdate"));			String infostatus = map.get("infostatus").toString().replace("00", "已通过").replace("01", "待审核").replace("02", "已拒绝");			excelMap.put("参赛队审核状态",infostatus);			String feestatus = map.get("feestatus").toString().replace("00", "已缴费").replace("01", "未缴费").replace("02", "部分缴费");			excelMap.put("参赛队缴费状态", feestatus);						excelList.add(excelMap);		}		return excelList;	}	public static List<Map<String, Object>> formatTeamMemberScoreData(List<Map<String, Object>> teamMemberScoreList) {		// TODO 自动生成的方法存根		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		//"证书编号","学校","队伍名称","赛项名称","奖项","指导教师","参赛队员"		for (Map<String, Object> map : teamMemberScoreList) {			excelMap = new HashMap<String, Object>();						excelMap.put("证书编号", map.get("awardsno"));			excelMap.put("学校", map.get("school"));			excelMap.put("队伍名称", map.get("tname"));						excelMap.put("赛项名称", map.get("rname"));			excelMap.put("奖项", map.get("awards"));			excelMap.put("指导教师", map.get("teachers"));			excelMap.put("参赛队员", map.get("students"));						excelList.add(excelMap);		}		return excelList;	}	public static List<Map<String, Object>> formatTeamScoreData(List<Map<String, Object>> teamScoreList) {		// TODO 自动生成的方法存根		List<Map<String, Object>> excelList = new ArrayList<Map<String, Object>>();		Map<String, Object> excelMap = null;		//"证书编号","学校","队伍名称","赛项名称","奖项","指导教师","参赛队员"		for (Map<String, Object> map : teamScoreList) {			excelMap = new HashMap<String, Object>();						excelMap.put("证书编号", map.get("awardsno"));			excelMap.put("学校", map.get("school"));			excelMap.put("队伍名称", map.get("tname"));						excelMap.put("赛项名称", map.get("rname"));			excelMap.put("奖项", map.get("awards"));			excelList.add(excelMap);		}		return excelList;	}	}					